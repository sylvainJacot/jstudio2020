{"ast":null,"code":"var _jsxFileName = \"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jctstudio20/src/components/04 Organisms/NavUxUIProjects/NavUxUIProjects.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { projectColors } from \"../../01 Atoms/Colors\";\nimport { UIUXProjects } from \"../../01 Atoms/Data\";\nimport NavUxUIProjectsItem from \"./NavUxUIProjectsItem\";\nconst Box = {\n  width: \"100%\",\n  height: \"100%\"\n};\n\nconst NavUxUIProjects = props => {\n  const [bgColor, setbgColor] = useState(\"\");\n  const [YPos, setYPos] = useState(0);\n  const myRef = useRef();\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  });\n\n  const handleScroll = () => {\n    let lastScrollY = window.pageYOffset + 320;\n    let lastScrollYDesktop = lastScrollY + 160;\n    let ref = myRef.current;\n    let refTop = ref.offsetTop;\n    let MediaQueryDesktop = window.matchMedia(\"(max-width: 1024px)\");\n    const NavProjectItemHeightDesktop = 880;\n    const NavProjectItemHeightMobile = 640;\n    const Bg1 = projectColors.Evergreen;\n    const Bg2 = projectColors.Samsung;\n    const Bg3 = projectColors.Kia;\n    const Bg4 = projectColors.Telenet;\n\n    if (MediaQueryDesktop.matches) {\n      if (lastScrollY >= 0) {\n        window.requestAnimationFrame(() => {\n          setbgColor(\"none\");\n        });\n      }\n\n      if (lastScrollY >= refTop) {\n        window.requestAnimationFrame(() => {\n          setbgColor(Bg1);\n        });\n      }\n\n      if (lastScrollY >= refTop + NavProjectItemHeightMobile) {\n        window.requestAnimationFrame(() => {\n          setbgColor(Bg2);\n        });\n      }\n\n      if (lastScrollY >= refTop + NavProjectItemHeightMobile * 2) {\n        window.requestAnimationFrame(() => {\n          setbgColor(Bg3);\n        });\n      }\n\n      if (lastScrollY >= refTop + NavProjectItemHeightMobile * 3) {\n        window.requestAnimationFrame(() => {\n          setbgColor(Bg4);\n        });\n      }\n    } else {\n      if (lastScrollYDesktop >= 0) {\n        window.requestAnimationFrame(() => {\n          setbgColor(\"none\");\n        });\n      }\n\n      if (lastScrollYDesktop >= refTop) {\n        window.requestAnimationFrame(() => {\n          setbgColor(Bg1);\n        });\n      }\n\n      if (lastScrollYDesktop >= refTop + NavProjectItemHeightDesktop) {\n        window.requestAnimationFrame(() => {\n          setbgColor(Bg2);\n        });\n      }\n\n      if (lastScrollYDesktop >= refTop + NavProjectItemHeightDesktop * 2) {\n        window.requestAnimationFrame(() => {\n          setbgColor(Bg3);\n        });\n      }\n\n      if (lastScrollYDesktop >= refTop + NavProjectItemHeightDesktop * 3) {\n        window.requestAnimationFrame(() => {\n          setbgColor(Bg4);\n        });\n      }\n    }\n  };\n\n  let {\n    url\n  } = useRouteMatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    style: Box,\n    ref: myRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, UIUXProjects.map((project, index) => /*#__PURE__*/React.createElement(NavUxUIProjectsItem, {\n    key: index,\n    bgColor: bgColor,\n    slug: `${url}/${project.slug}`,\n    title: project.title,\n    description: project.description,\n    backgroundpicture: project.backgroundpicture,\n    foregroundpicture: project.foregroundpicture,\n    fields: project.fields,\n    TextColor: project.maincolor,\n    FieldTextColorVisible: project.FieldTextColorVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default NavUxUIProjects;","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jctstudio20/src/components/04 Organisms/NavUxUIProjects/NavUxUIProjects.js"],"names":["React","useState","useEffect","useRef","useRouteMatch","projectColors","UIUXProjects","NavUxUIProjectsItem","Box","width","height","NavUxUIProjects","props","bgColor","setbgColor","YPos","setYPos","myRef","window","addEventListener","handleScroll","removeEventListener","lastScrollY","pageYOffset","lastScrollYDesktop","ref","current","refTop","offsetTop","MediaQueryDesktop","matchMedia","NavProjectItemHeightDesktop","NavProjectItemHeightMobile","Bg1","Evergreen","Bg2","Samsung","Bg3","Kia","Bg4","Telenet","matches","requestAnimationFrame","url","map","project","index","slug","title","description","backgroundpicture","foregroundpicture","fields","maincolor","FieldTextColorVisible"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AAEA,SAAQC,aAAR,QAA4B,uBAA5B;AACA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAIA,MAAMC,GAAG,GAAG;AACRC,EAAAA,KAAK,EAAE,MADC;AAERC,EAAAA,MAAM,EAAE;AAFA,CAAZ;;AAKA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAE/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAMgB,KAAK,GAAGd,MAAM,EAApB;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AAEA,WAAO,MAAM;AACTF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAoCD,YAApC;AACH,KAFD;AAGH,GANQ,CAAT;;AASA,QAAMA,YAAY,GAAG,MAAM;AAEvB,QAAIE,WAAW,GAAGJ,MAAM,CAACK,WAAP,GAAqB,GAAvC;AACA,QAAIC,kBAAkB,GAAGF,WAAW,GAAG,GAAvC;AACA,QAAIG,GAAG,GAAGR,KAAK,CAACS,OAAhB;AACA,QAAIC,MAAM,GAAGF,GAAG,CAACG,SAAjB;AAEA,QAAIC,iBAAiB,GAAGX,MAAM,CAACY,UAAP,CAAkB,qBAAlB,CAAxB;AAEA,UAAMC,2BAA2B,GAAG,GAApC;AACA,UAAMC,0BAA0B,GAAG,GAAnC;AAEA,UAAMC,GAAG,GAAG5B,aAAa,CAAC6B,SAA1B;AACA,UAAMC,GAAG,GAAG9B,aAAa,CAAC+B,OAA1B;AACA,UAAMC,GAAG,GAAGhC,aAAa,CAACiC,GAA1B;AACA,UAAMC,GAAG,GAAGlC,aAAa,CAACmC,OAA1B;;AAMA,QAAIX,iBAAiB,CAACY,OAAtB,EAA+B;AAE/B,UAAInB,WAAW,IAAI,CAAnB,EAAsB;AAClBJ,QAAAA,MAAM,CAACwB,qBAAP,CAA6B,MAAM;AAC/B5B,UAAAA,UAAU,CAAC,MAAD,CAAV;AACH,SAFD;AAGH;;AAED,UAAIQ,WAAW,IAAIK,MAAnB,EAA2B;AACvBT,QAAAA,MAAM,CAACwB,qBAAP,CAA6B,MAAM;AAC/B5B,UAAAA,UAAU,CAACmB,GAAD,CAAV;AACH,SAFD;AAIH;;AACD,UAAIX,WAAW,IAAIK,MAAM,GAAGK,0BAA5B,EAAwD;AACpDd,QAAAA,MAAM,CAACwB,qBAAP,CAA6B,MAAM;AAC/B5B,UAAAA,UAAU,CAACqB,GAAD,CAAV;AACH,SAFD;AAIH;;AACG,UAAIb,WAAW,IAAIK,MAAM,GAAGK,0BAA0B,GAAG,CAAzD,EAA4D;AACxDd,QAAAA,MAAM,CAACwB,qBAAP,CAA6B,MAAM;AAC/B5B,UAAAA,UAAU,CAACuB,GAAD,CAAV;AACH,SAFD;AAIH;;AACD,UAAIf,WAAW,IAAIK,MAAM,GAAGK,0BAA0B,GAAG,CAAzD,EAA4D;AACxDd,QAAAA,MAAM,CAACwB,qBAAP,CAA6B,MAAM;AAC/B5B,UAAAA,UAAU,CAACyB,GAAD,CAAV;AACH,SAFD;AAIH;AAGJ,KAlCD,MAmCK;AACD,UAAIf,kBAAkB,IAAI,CAA1B,EAA6B;AACzBN,QAAAA,MAAM,CAACwB,qBAAP,CAA6B,MAAM;AAC/B5B,UAAAA,UAAU,CAAC,MAAD,CAAV;AACH,SAFD;AAGH;;AAED,UAAIU,kBAAkB,IAAIG,MAA1B,EAAkC;AAC9BT,QAAAA,MAAM,CAACwB,qBAAP,CAA6B,MAAM;AAC/B5B,UAAAA,UAAU,CAACmB,GAAD,CAAV;AACH,SAFD;AAIH;;AACD,UAAIT,kBAAkB,IAAIG,MAAM,GAAGI,2BAAnC,EAAgE;AAC5Db,QAAAA,MAAM,CAACwB,qBAAP,CAA6B,MAAM;AAC/B5B,UAAAA,UAAU,CAACqB,GAAD,CAAV;AACH,SAFD;AAIH;;AACD,UAAIX,kBAAkB,IAAIG,MAAM,GAAGI,2BAA2B,GAAG,CAAjE,EAAoE;AAChEb,QAAAA,MAAM,CAACwB,qBAAP,CAA6B,MAAM;AAC/B5B,UAAAA,UAAU,CAACuB,GAAD,CAAV;AACH,SAFD;AAIH;;AACD,UAAIb,kBAAkB,IAAIG,MAAM,GAAGI,2BAA2B,GAAG,CAAjE,EAAoE;AAChEb,QAAAA,MAAM,CAACwB,qBAAP,CAA6B,MAAM;AAC/B5B,UAAAA,UAAU,CAACyB,GAAD,CAAV;AACH,SAFD;AAIH;AAEJ;AAEJ,GA1FD;;AA4FA,MAAI;AAAEI,IAAAA;AAAF,MAAUvC,aAAa,EAA3B;AAEI,sBACI,uDACI;AAAS,IAAA,KAAK,EAAEI,GAAhB;AAAqB,IAAA,GAAG,EAAES,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQX,YAAY,CAACsC,GAAb,CAAiB,CAACC,OAAD,EAASC,KAAT,kBAEjB,oBAAC,mBAAD;AACA,IAAA,GAAG,EAAEA,KADL;AAEA,IAAA,OAAO,EAAEjC,OAFT;AAGA,IAAA,IAAI,EAAG,GAAE8B,GAAI,IAAGE,OAAO,CAACE,IAAK,EAH7B;AAIA,IAAA,KAAK,EAAEF,OAAO,CAACG,KAJf;AAKA,IAAA,WAAW,EAAEH,OAAO,CAACI,WALrB;AAMA,IAAA,iBAAiB,EAAEJ,OAAO,CAACK,iBAN3B;AAOA,IAAA,iBAAiB,EAAEL,OAAO,CAACM,iBAP3B;AAQA,IAAA,MAAM,EAAEN,OAAO,CAACO,MARhB;AASA,IAAA,SAAS,EAAEP,OAAO,CAACQ,SATnB;AAUA,IAAA,qBAAqB,EAAER,OAAO,CAACS,qBAV/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAHR,CADJ,CADJ;AA6BP,CA5ID;;AA8IA,eAAe3C,eAAf","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport {useRouteMatch} from \"react-router-dom\";\n\nimport {projectColors} from \"../../01 Atoms/Colors\";\nimport {UIUXProjects} from \"../../01 Atoms/Data\";\nimport NavUxUIProjectsItem from \"./NavUxUIProjectsItem\";\n\n\n\nconst Box = {\n    width: \"100%\",\n    height: \"100%\",\n};\n\nconst NavUxUIProjects = (props) => {\n\n    const [bgColor, setbgColor] = useState(\"\");\n    const [YPos, setYPos] = useState(0);\n    const myRef = useRef();\n\n\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n\n        return () => {\n            window.removeEventListener('scroll',handleScroll);\n        }\n    })\n\n\n    const handleScroll = () => {\n\n        let lastScrollY = window.pageYOffset + 320;\n        let lastScrollYDesktop = lastScrollY + 160;\n        let ref = myRef.current;\n        let refTop = ref.offsetTop;\n\n        let MediaQueryDesktop = window.matchMedia(\"(max-width: 1024px)\")\n\n        const NavProjectItemHeightDesktop = 880;\n        const NavProjectItemHeightMobile = 640;\n\n        const Bg1 = projectColors.Evergreen;\n        const Bg2 = projectColors.Samsung;\n        const Bg3 = projectColors.Kia;\n        const Bg4 = projectColors.Telenet;\n\n        \n\n\n\n        if (MediaQueryDesktop.matches) {\n\n        if (lastScrollY >= 0) {\n            window.requestAnimationFrame(() => {\n                setbgColor(\"none\")\n            });\n        }\n\n        if (lastScrollY >= refTop) {\n            window.requestAnimationFrame(() => {\n                setbgColor(Bg1)\n            });\n\n        }\n        if (lastScrollY >= refTop + NavProjectItemHeightMobile) {\n            window.requestAnimationFrame(() => {\n                setbgColor(Bg2)\n            });\n\n        }\n            if (lastScrollY >= refTop + NavProjectItemHeightMobile * 2) {\n                window.requestAnimationFrame(() => {\n                    setbgColor(Bg3)\n                });\n\n            }\n            if (lastScrollY >= refTop + NavProjectItemHeightMobile * 3) {\n                window.requestAnimationFrame(() => {\n                    setbgColor(Bg4)\n                });\n\n            }\n\n\n        }\n        else {\n            if (lastScrollYDesktop >= 0) {\n                window.requestAnimationFrame(() => {\n                    setbgColor(\"none\")\n                });\n            }\n\n            if (lastScrollYDesktop >= refTop) {\n                window.requestAnimationFrame(() => {\n                    setbgColor(Bg1)\n                });\n\n            }\n            if (lastScrollYDesktop >= refTop + NavProjectItemHeightDesktop) {\n                window.requestAnimationFrame(() => {\n                    setbgColor(Bg2)\n                });\n\n            }\n            if (lastScrollYDesktop >= refTop + NavProjectItemHeightDesktop * 2) {\n                window.requestAnimationFrame(() => {\n                    setbgColor(Bg3)\n                });\n\n            }\n            if (lastScrollYDesktop >= refTop + NavProjectItemHeightDesktop * 3) {\n                window.requestAnimationFrame(() => {\n                    setbgColor(Bg4)\n                });\n\n            }\n\n        }\n\n    }\n\n    let { url } = useRouteMatch();\n\n        return (\n            <>\n                <section style={Box} ref={myRef}>\n\n                    {\n                        UIUXProjects.map((project,index) =>\n\n                        <NavUxUIProjectsItem\n                        key={index}\n                        bgColor={bgColor}\n                        slug={`${url}/${project.slug}`}\n                        title={project.title}\n                        description={project.description}\n                        backgroundpicture={project.backgroundpicture}\n                        foregroundpicture={project.foregroundpicture}\n                        fields={project.fields}\n                        TextColor={project.maincolor}\n                        FieldTextColorVisible={project.FieldTextColorVisible}\n\n                        />\n\n                        )\n                    }\n\n                </section>\n\n            </>\n        )\n\n}\n\nexport default NavUxUIProjects;"]},"metadata":{},"sourceType":"module"}
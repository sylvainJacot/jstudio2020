{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jctstudio20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\ndisplay: flex;\\njustify-content: center;\\nflex-wrap: wrap;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    width: unset;\\n    \"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\nbackground-color: \",\";\\ntext-align: center;\\npadding: 80px 0px;\\n\\n    & h2 {\\n    width: 50%;\\n    position: relative;\\n    display: inline-block;\\n    \",\";\\n    font-weight: 800;\\n    font-size: 5rem;\\n    text-align: center;\\n    padding: 40px 0;\\n    line-height: 1.3;\\n    \",\";\\n    \\n        &::before{\\n          position: absolute;\\n          content: \\\"\\\";\\n          display: block;\\n          width: 40px;\\n          height: 40px;\\n          background-image: url(\",\");\\n          background-size: contain;\\n          background-repeat: no-repeat;\\n          left: -56px;\\n\\n        }\\n    \\n    }\\n\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import{colorsRoles}from\"../../../01 Atoms/Colors\";import CodeSandBoxItem from\"./CodeSandBoxItem\";import{fonts}from\"../../../01 Atoms/globalStyle\";import CodeSandBox from\"../../../../media/icons/methodology/code-sandbox.svg\";import{codesandboxes}from\"../../../01 Atoms/codesandboxes\";import{media}from\"../../../01 Atoms/MediaQueries\";var CodeSandboxes=function CodeSandboxes(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Wrapper,null,/*#__PURE__*/React.createElement(\"h2\",null,\"CodeSanbox Section\"),/*#__PURE__*/React.createElement(CodeSandoxItems,null,codesandboxes.map(function(item,index){return/*#__PURE__*/React.createElement(CodeSandBoxItem,{key:index,href:item.href,src:item.src,alt:item.alt,label:item.name});}),\";\")));};export default CodeSandboxes;export var Wrapper=styled.div(_templateObject(),colorsRoles.LightGrey2,fonts.RobotoBold,media.tablet(_templateObject2()),CodeSandBox);export var CodeSandoxItems=styled.div(_templateObject3());","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jctstudio20/src/components/04 Organisms/NavDeveloperProjects/CodeSandboxes/CodeSandboxes.js"],"names":["React","styled","colorsRoles","CodeSandBoxItem","fonts","codesandboxes","media","CodeSandboxes","map","item","index","href","src","alt","name","Wrapper","div","LightGrey2","RobotoBold","tablet","CodeSandBox","CodeSandoxItems"],"mappings":"qzCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAAQC,WAAR,KAA0B,0BAA1B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,OAAQC,KAAR,KAAoB,+BAApB,C,8EAEA,OAAQC,aAAR,KAA4B,iCAA5B,CACA,OAAQC,KAAR,KAAoB,gCAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,mBAAO,qDACH,oBAAC,OAAD,mBACI,mDADJ,cAEI,oBAAC,eAAD,MAEQF,aAAa,CAACG,GAAd,CAAkB,SAACC,IAAD,CAAMC,KAAN,qBACd,oBAAC,eAAD,EACI,GAAG,CAAEA,KADT,CAEI,IAAI,CAAED,IAAI,CAACE,IAFf,CAGI,GAAG,CAAEF,IAAI,CAACG,GAHd,CAII,GAAG,CAAEH,IAAI,CAACI,GAJd,CAKI,KAAK,CAAEJ,IAAI,CAACK,IALhB,EADc,EAAlB,CAFR,KAFJ,CADG,CAAP,CAqBH,CAtBD,CAwBA,cAAeP,CAAAA,aAAf,CAEA,MAAO,IAAMQ,CAAAA,OAAO,CAAGd,MAAM,CAACe,GAAV,mBACAd,WAAW,CAACe,UADZ,CASdb,KAAK,CAACc,UATQ,CAedZ,KAAK,CAACa,MAfQ,qBAyBcC,WAzBd,CAAb,CAoCP,MAAO,IAAMC,CAAAA,eAAe,CAAGpB,MAAM,CAACe,GAAV,oBAArB","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {colorsRoles} from \"../../../01 Atoms/Colors\";\nimport CodeSandBoxItem from \"./CodeSandBoxItem\";\nimport {fonts} from \"../../../01 Atoms/globalStyle\";\nimport CodeSandBox from \"../../../../media/icons/methodology/code-sandbox.svg\";\nimport {codesandboxes} from \"../../../01 Atoms/codesandboxes\";\nimport {media} from \"../../../01 Atoms/MediaQueries\";\n\nconst CodeSandboxes = () => {\n    return <>\n        <Wrapper>\n            <h2>CodeSanbox Section</h2>\n            <CodeSandoxItems>\n                {\n                    codesandboxes.map((item,index) => (\n                        <CodeSandBoxItem\n                            key={index}\n                            href={item.href}\n                            src={item.src}\n                            alt={item.alt}\n                            label={item.name}\n                        />\n                    ))\n\n                };\n            </CodeSandoxItems>\n        </Wrapper>\n\n    </>\n\n};\n\nexport default CodeSandboxes;\n\nexport const Wrapper = styled.div`\nbackground-color: ${colorsRoles.LightGrey2};\ntext-align: center;\npadding: 80px 0px;\n\n    & h2 {\n    width: 50%;\n    position: relative;\n    display: inline-block;\n    ${fonts.RobotoBold};\n    font-weight: 800;\n    font-size: 5rem;\n    text-align: center;\n    padding: 40px 0;\n    line-height: 1.3;\n    ${media.tablet`\n    width: unset;\n    `};\n    \n        &::before{\n          position: absolute;\n          content: \"\";\n          display: block;\n          width: 40px;\n          height: 40px;\n          background-image: url(${CodeSandBox});\n          background-size: contain;\n          background-repeat: no-repeat;\n          left: -56px;\n\n        }\n    \n    }\n\n`;\n\nexport const CodeSandoxItems = styled.div`\ndisplay: flex;\njustify-content: center;\nflex-wrap: wrap;\n`;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jctstudio20/src/components/02 Molecules/Button.js\";\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { IcArrow } from \"../01 Atoms/Icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { colorsRoles } from \"../01 Atoms/Colors\";\nimport { media } from \"../01 Atoms/MediaQueries\";\nimport { transitions } from \"../01 Atoms/Animations\";\nexport const StyledLink = styled(NavLink)`\nposition: relative;\ndisplay: inline-block;\nwidth: fit-content;\nheight: fit-content;\npadding: 16px;\nmargin-top: 8px;\nmargin-bottom: 16px;\nborder-radius: 8px;\ncolor: ${colorsRoles.White};\nbackground-color: transparent;\nborder: 1px solid ${colorsRoles.White};  \n& div > svg {\nfill: ${colorsRoles.White};\n}  \n${media.desktop`\nmargin-top: 24px;\npadding: 24px;\nmargin-bottom: 0px;\n&:hover {\n        & svg {\n        margin-left: 32px;\n        transition: ${transitions.basic1};\n        }\n    }\n`}\n    \n    \n${props => {\n  return props.small && css`\n      padding: 8px 16px 8px 16px;\n      ${media.desktop`\n      padding: 8px 16px 8px 16px;\n      `}\n          `;\n}}\n\n${props => {\n  return props.lightmode && css`\n        border-color: ${colorsRoles.DarkGrey};\n        & > div {\n        color: ${colorsRoles.DarkGrey};\n        & > svg {\n        fill: ${colorsRoles.DarkGrey};\n        }\n        }\n        `;\n}}\n\n`;\nexport const StyledSpan = styled.span`\nposition: relative;\ndisplay: inline-block;\nwidth: fit-content;\nheight: fit-content;\npadding: 16px;\nmargin-top: 8px;\nmargin-bottom: 16px;\nborder-radius: 8px;\ncolor: ${colorsRoles.White};\nbackground-color: transparent;\nborder: 1px solid ${colorsRoles.White};  \n& div > svg {\nfill: ${colorsRoles.White};\n}  \n${media.desktop`\nmargin-top: 24px;\npadding: 24px;\nmargin-bottom: 0px;\n&:hover {\n        & svg {\n        margin-left: 32px;\n        transition: ${transitions.basic1};\n        }\n    }\n`}\n    \n    \n${props => {\n  return props.small && css`\n      padding: 8px 16px 8px 16px;\n      ${media.desktop`\n      padding: 8px 16px 8px 16px;\n      `}\n          `;\n}}\n\n${props => {\n  return props.lightmode && css`\n        border-color: ${colorsRoles.DarkGrey};\n        & > div {\n        color: ${colorsRoles.DarkGrey};\n        & > svg {\n        fill: ${colorsRoles.DarkGrey};\n        }\n        }\n        `;\n}}\n\n`;\nexport const Content = styled.div`\ndisplay: flex;\nalign-items: center;\ncolor: ${colorsRoles.White};\nfont-family: Roboto;\nfont-size: 2rem;\n\n& svg {\nmargin-left: 16px;\n}\n\\`;\n`;\n\nconst Button = ({\n  pathname,\n  label,\n  small,\n  lightmode,\n  isspan\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isspan ? /*#__PURE__*/React.createElement(StyledSpan, {\n    small: small,\n    lightmode: lightmode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, label ? label : \"Default\", /*#__PURE__*/React.createElement(IcArrow, {\n    IconSize: \"24px\",\n    SizeBis: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }))) : /*#__PURE__*/React.createElement(StyledLink, {\n    to: pathname,\n    small: small,\n    lightmode: lightmode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, label ? label : \"Default\", /*#__PURE__*/React.createElement(IcArrow, {\n    IconSize: \"24px\",\n    SizeBis: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jctstudio20/src/components/02 Molecules/Button.js"],"names":["React","styled","css","IcArrow","NavLink","colorsRoles","media","transitions","StyledLink","White","desktop","basic1","props","small","lightmode","DarkGrey","StyledSpan","span","Content","div","Button","pathname","label","isspan"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {IcArrow} from \"../01 Atoms/Icons\"\nimport {NavLink} from \"react-router-dom\";\nimport {colorsRoles} from \"../01 Atoms/Colors\";\nimport {media} from \"../01 Atoms/MediaQueries\";\nimport {transitions} from \"../01 Atoms/Animations\";\n\n\n\nexport const StyledLink = styled(NavLink)`\nposition: relative;\ndisplay: inline-block;\nwidth: fit-content;\nheight: fit-content;\npadding: 16px;\nmargin-top: 8px;\nmargin-bottom: 16px;\nborder-radius: 8px;\ncolor: ${colorsRoles.White};\nbackground-color: transparent;\nborder: 1px solid ${colorsRoles.White};  \n& div > svg {\nfill: ${colorsRoles.White};\n}  \n${media.desktop`\nmargin-top: 24px;\npadding: 24px;\nmargin-bottom: 0px;\n&:hover {\n        & svg {\n        margin-left: 32px;\n        transition: ${transitions.basic1};\n        }\n    }\n`}\n    \n    \n${(props) => {\n    return (\n      props.small &&\n      css`\n      padding: 8px 16px 8px 16px;\n      ${media.desktop`\n      padding: 8px 16px 8px 16px;\n      `}\n          `\n    );\n}}\n\n${(props) => {\n    return (\n        props.lightmode &&\n        css`\n        border-color: ${colorsRoles.DarkGrey};\n        & > div {\n        color: ${colorsRoles.DarkGrey};\n        & > svg {\n        fill: ${colorsRoles.DarkGrey};\n        }\n        }\n        `\n    );\n}}\n\n`;\nexport const StyledSpan = styled.span`\nposition: relative;\ndisplay: inline-block;\nwidth: fit-content;\nheight: fit-content;\npadding: 16px;\nmargin-top: 8px;\nmargin-bottom: 16px;\nborder-radius: 8px;\ncolor: ${colorsRoles.White};\nbackground-color: transparent;\nborder: 1px solid ${colorsRoles.White};  \n& div > svg {\nfill: ${colorsRoles.White};\n}  \n${media.desktop`\nmargin-top: 24px;\npadding: 24px;\nmargin-bottom: 0px;\n&:hover {\n        & svg {\n        margin-left: 32px;\n        transition: ${transitions.basic1};\n        }\n    }\n`}\n    \n    \n${(props) => {\n    return (\n        props.small &&\n        css`\n      padding: 8px 16px 8px 16px;\n      ${media.desktop`\n      padding: 8px 16px 8px 16px;\n      `}\n          `\n    );\n}}\n\n${(props) => {\n    return (\n        props.lightmode &&\n        css`\n        border-color: ${colorsRoles.DarkGrey};\n        & > div {\n        color: ${colorsRoles.DarkGrey};\n        & > svg {\n        fill: ${colorsRoles.DarkGrey};\n        }\n        }\n        `\n    );\n}}\n\n`;\n\nexport const Content = styled.div`\ndisplay: flex;\nalign-items: center;\ncolor: ${colorsRoles.White};\nfont-family: Roboto;\nfont-size: 2rem;\n\n& svg {\nmargin-left: 16px;\n}\n\\`;\n`;\n\n\n\nconst Button = ({ pathname, label, small, lightmode, isspan}) => {\n\n\n    return (\n        <>\n\n        {\n            isspan ?\n\n            <StyledSpan  small={small} lightmode={lightmode}>\n                <Content>\n                    {label ? label : \"Default\"}\n                    <IcArrow IconSize={\"24px\"} SizeBis={\"100%\"}/>\n                </Content>\n            </StyledSpan>\n\n                :\n\n            <StyledLink to={pathname} small={small} lightmode={lightmode}>\n                <Content>\n                    {label ? label : \"Default\"}\n                    <IcArrow IconSize={\"24px\"} SizeBis={\"100%\"}/>\n                </Content>\n            </StyledLink>\n\n        }\n        </>\n\n    );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}
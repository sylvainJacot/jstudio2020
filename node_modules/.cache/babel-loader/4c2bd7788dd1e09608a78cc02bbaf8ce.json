{"ast":null,"code":"var _jsxFileName = \"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jctstudio2020/src/components/04 Organisms/NavDeveloperProjects/NavCreativeDeveloperProjectItem.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { colors, colorsRoles } from \"../../01 Atoms/Colors\";\nimport Button from \"../../02 Molecules/Button\";\nimport { media } from \"../../01 Atoms/MediaQueries\";\nimport { transitions } from \"../../01 Atoms/Animations\";\nimport BgTest from \"../../../media/Home.jpg\";\nimport ResponsiveImage from \"../../01 Atoms/ResponsiveImage\";\nexport const Box = styled.div`\nposition: relative;\nwidth: 100%;\nheight: 640px;\ndisplay: flex;\nflex-direction: column-reverse;\nmargin-bottom: 56px;\n\n${media.desktop`\nheight: 500px;\nflex-direction: row;\n`}\n`;\nexport const LeftContent = styled.div`\nheight: 100%;\n`;\nexport const LeftSide = styled.div`\nwidth: 100%;\nheight: 100%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n${media.desktop`\nwidth: 50%;\n`}\n\n    ${LeftContent} {\n    width: 80%;\n    height: fit-content;\n    text-align: center;\n    ${media.desktop`\n    text-align: left;\n    width: 360px;\n    `}\n    ${media.desktopL`\n    width: 480px;\n    `}\n    \n    & p {\n    font-family: Roboto-LightItalic;\n    font-size: 2rem;\n    color: ${props => props.FieldTextColorVisible};\n    letter-spacing: 0;\n    line-height: 24px;\n    margin-bottom: 8px;\n    }\n    \n    & h3 {\n    font-family: PlayfairDisplay-Regular_Black;\n    font-size: 6rem;\n    line-height: 48px;\n    color: ${props => props.TextColor};\n    margin-bottom: 24px;\n    ${media.desktop`\n    margin-bottom: 32px;\n    `}\n    }\n    \n    & h3 ~ p {\n    font-family: Roboto-Regular;\n    font-size: 2rem;\n    color: black;\n    letter-spacing: 0;\n    line-height: 1.5;\n    margin-bottom: 8px;\n    text-align: left;\n    ${media.desktop`\n    margin-bottom: 16px;\n    `}\n    }\n\n}\n`;\nexport const RightSide = styled.div`\nwidth: 100%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nz-index: 2;\n${media.desktop`\nwidth: 50%;\nheight: 100%;\n`}\n\n`;\nexport const ToolsBoxProject = styled.div`\nposition: absolute;\nwidth: 400px;\nheight: 96px;\nbackground-color: ${colors.PureWhite};\nbottom: -143px;\nright: 50%;\ntransform: translate(50%,-50%);\nborder-radius: 0px 0px 16px 16px;\nz-index: -1;\ntransition: ${transitions.basic2};\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n-webkit-box-shadow: -1px 11px 25px -5px ${colorsRoles.DarkGrey}20;\n-moz-box-shadow: -1px 11px 25px -5px ${colorsRoles.DarkGrey}20;\nbox-shadow: -1px 11px 25px -5px ${colorsRoles.DarkGrey}20;\n\n\n& p {\nfont-family: Roboto;\nfont-weight: 600;\nfont-size: 1.5rem;\ncolor: ${colorsRoles.LightGrey};\n}\n\n`;\nexport const PictureWrapper = styled.div`\nposition: absolute;\noverflow: hidden;\nwidth: 100%;\nheight: 100%;\nz-index: 2;\n\n& img {\nwidth: 100%;\n}\n\n`;\nexport const ProjectPicture = styled.div`\nposition: relative;\nwidth: 500px;\nheight: 304px;\nbackground-color: ${colors.LightGrey2};\n\n&:after, &:before{\ncontent: \"\";\nposition: absolute;\ntop: 3px;\nwidth: 50%;\nheight: 100%;\nbackground: linear-gradient(to bottom, transparent, ${colorsRoles.DarkGrey});\nfilter: blur(8px);\nopacity: .7;\ntransition: ${transitions.basic1};\n}\n\n:before {\nleft: 0;\ntransform: skewY(-2deg);\n}\n:after {\nright: 0;\ntransform: skewY(2deg);\n}\n\n${media.desktop`\nbottom: 0px;\n&:hover {\n    ${ToolsBoxProject} {\n    bottom: -143px;\n    transition: ${transitions.basic1};\n    } \n}\n`}\n\n\n`;\nexport const ToolItem = styled.img`\nwidth: 40px;\nheight: 40px;\nmargin-left: 24px;\n`;\n\nconst NavCreativeDeveloperProjectItem = props => {\n  const Tools = props.Tools;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LeftSide, {\n    FieldTextColorVisible: \"black\",\n    TextColor: props.TextColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LeftContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, props.field), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, props.description), /*#__PURE__*/React.createElement(Button, {\n    pathname: props.slug,\n    label: \"See more\",\n    LightMode: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(RightSide, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProjectPicture, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PictureWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveImage, {\n    sourceMobile: BgTest,\n    sourceDesktop: BgTest,\n    breakPoint: \"768\",\n    altImage: \"Test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(ToolsBoxProject, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, \"built with\"), Tools && Tools.map((item, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToolItem, {\n    key: index,\n    src: item.logo,\n    alt: item.altImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }\n  }))))))));\n};\n\nexport default NavCreativeDeveloperProjectItem;","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jctstudio2020/src/components/04 Organisms/NavDeveloperProjects/NavCreativeDeveloperProjectItem.js"],"names":["React","styled","colors","colorsRoles","Button","media","transitions","BgTest","ResponsiveImage","Box","div","desktop","LeftContent","LeftSide","desktopL","props","FieldTextColorVisible","TextColor","RightSide","ToolsBoxProject","PureWhite","basic2","DarkGrey","LightGrey","PictureWrapper","ProjectPicture","LightGrey2","basic1","ToolItem","img","NavCreativeDeveloperProjectItem","Tools","field","title","description","slug","map","item","index","logo","altImage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {colors, colorsRoles} from \"../../01 Atoms/Colors\";\nimport Button from \"../../02 Molecules/Button\";\nimport {media} from \"../../01 Atoms/MediaQueries\";\nimport {transitions} from \"../../01 Atoms/Animations\";\nimport BgTest from \"../../../media/Home.jpg\";\nimport ResponsiveImage from \"../../01 Atoms/ResponsiveImage\";\n\n\nexport const Box = styled.div`\nposition: relative;\nwidth: 100%;\nheight: 640px;\ndisplay: flex;\nflex-direction: column-reverse;\nmargin-bottom: 56px;\n\n${media.desktop`\nheight: 500px;\nflex-direction: row;\n`}\n`;\n\nexport const LeftContent = styled.div`\nheight: 100%;\n`;\nexport const LeftSide = styled.div`\nwidth: 100%;\nheight: 100%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n${media.desktop`\nwidth: 50%;\n`}\n\n    ${LeftContent} {\n    width: 80%;\n    height: fit-content;\n    text-align: center;\n    ${media.desktop`\n    text-align: left;\n    width: 360px;\n    `}\n    ${media.desktopL`\n    width: 480px;\n    `}\n    \n    & p {\n    font-family: Roboto-LightItalic;\n    font-size: 2rem;\n    color: ${props => props.FieldTextColorVisible};\n    letter-spacing: 0;\n    line-height: 24px;\n    margin-bottom: 8px;\n    }\n    \n    & h3 {\n    font-family: PlayfairDisplay-Regular_Black;\n    font-size: 6rem;\n    line-height: 48px;\n    color: ${props => props.TextColor};\n    margin-bottom: 24px;\n    ${media.desktop`\n    margin-bottom: 32px;\n    `}\n    }\n    \n    & h3 ~ p {\n    font-family: Roboto-Regular;\n    font-size: 2rem;\n    color: black;\n    letter-spacing: 0;\n    line-height: 1.5;\n    margin-bottom: 8px;\n    text-align: left;\n    ${media.desktop`\n    margin-bottom: 16px;\n    `}\n    }\n\n}\n`;\n\nexport const RightSide = styled.div`\nwidth: 100%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nz-index: 2;\n${media.desktop`\nwidth: 50%;\nheight: 100%;\n`}\n\n`;\n\n\nexport const ToolsBoxProject = styled.div`\nposition: absolute;\nwidth: 400px;\nheight: 96px;\nbackground-color: ${colors.PureWhite};\nbottom: -143px;\nright: 50%;\ntransform: translate(50%,-50%);\nborder-radius: 0px 0px 16px 16px;\nz-index: -1;\ntransition: ${transitions.basic2};\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n-webkit-box-shadow: -1px 11px 25px -5px ${colorsRoles.DarkGrey}20;\n-moz-box-shadow: -1px 11px 25px -5px ${colorsRoles.DarkGrey}20;\nbox-shadow: -1px 11px 25px -5px ${colorsRoles.DarkGrey}20;\n\n\n& p {\nfont-family: Roboto;\nfont-weight: 600;\nfont-size: 1.5rem;\ncolor: ${colorsRoles.LightGrey};\n}\n\n`;\n\nexport const PictureWrapper = styled.div`\nposition: absolute;\noverflow: hidden;\nwidth: 100%;\nheight: 100%;\nz-index: 2;\n\n& img {\nwidth: 100%;\n}\n\n`;\n\nexport const ProjectPicture = styled.div`\nposition: relative;\nwidth: 500px;\nheight: 304px;\nbackground-color: ${colors.LightGrey2};\n\n&:after, &:before{\ncontent: \"\";\nposition: absolute;\ntop: 3px;\nwidth: 50%;\nheight: 100%;\nbackground: linear-gradient(to bottom, transparent, ${colorsRoles.DarkGrey});\nfilter: blur(8px);\nopacity: .7;\ntransition: ${transitions.basic1};\n}\n\n:before {\nleft: 0;\ntransform: skewY(-2deg);\n}\n:after {\nright: 0;\ntransform: skewY(2deg);\n}\n\n${media.desktop`\nbottom: 0px;\n&:hover {\n    ${ToolsBoxProject} {\n    bottom: -143px;\n    transition: ${transitions.basic1};\n    } \n}\n`}\n\n\n`;\n\n\nexport const ToolItem = styled.img`\nwidth: 40px;\nheight: 40px;\nmargin-left: 24px;\n`;\n\n\n\nconst NavCreativeDeveloperProjectItem = (props) => {\n\n    const Tools = props.Tools;\n\n    return <>\n        <Box>\n            <LeftSide FieldTextColorVisible={\"black\"} TextColor={props.TextColor}>\n                <LeftContent>\n                    <p>{props.field}</p>\n                    <h3>{props.title}</h3>\n                    <p>{props.description}</p>\n                    <Button pathname={props.slug} label={\"See more\"} LightMode/>\n                </LeftContent>\n            </LeftSide>\n            <RightSide>\n\n                    <ProjectPicture>\n                        <PictureWrapper>\n                            <ResponsiveImage\n                                sourceMobile={BgTest}\n                                sourceDesktop={BgTest}\n                                breakPoint={\"768\"}\n                                altImage={\"Test\"}\n                            />\n                        </PictureWrapper>\n                        <ToolsBoxProject>\n                            <p>built with</p>\n\n                            {\n                                Tools && Tools.map((item,index) => (\n                                    <>\n                                    <ToolItem\n                                        key={index}\n                                        src={item.logo}\n                                        alt={item.altImage}\n                                    ></ToolItem>\n                                    </>\n\n\n                                ))\n                            }\n\n                        </ToolsBoxProject>\n                    </ProjectPicture>\n\n            </RightSide>\n        </Box>\n    </>\n\n};\n\nexport default NavCreativeDeveloperProjectItem;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
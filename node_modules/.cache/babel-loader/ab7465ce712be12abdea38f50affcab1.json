{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jctstudio20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\";\\n    @media (min-width: \",\"em) {\\n      \",\";\\n    }\\n  \"]);_templateObject=function _templateObject(){return data;};return data;}/* From https://medium.com/@samuelresua/easy-media-queries-in-styled-components-690b78f50053 */import{css}from'styled-components';export var sizes={desktopL:1440,desktop:1024,tablet:768,mobileL:425,mobile:320};// Object.keys : return the keys of the objects from sizes\nexport var media=Object.keys(sizes).reduce(function(accumulator,label){var emSize=sizes[label]/16;accumulator[label]=function(){return css(_templateObject(),emSize,css.apply(void 0,arguments));};return accumulator;},{});","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jctstudio20/src/components/01 Atoms/MediaQueries.js"],"names":["css","sizes","desktopL","desktop","tablet","mobileL","mobile","media","Object","keys","reduce","accumulator","label","emSize"],"mappings":"6ZAAA,+FAEA,OAAQA,GAAR,KAAkB,mBAAlB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,CACjBC,QAAQ,CAAE,IADO,CAEjBC,OAAO,CAAE,IAFQ,CAGjBC,MAAM,CAAE,GAHS,CAIjBC,OAAO,CAAE,GAJQ,CAKjBC,MAAM,CAAE,GALS,CAAd,CAQP;AAEA,MAAO,IAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,MAAnB,CAA0B,SAACC,WAAD,CAAcC,KAAd,CAAwB,CACnE,GAAMC,CAAAA,MAAM,CAAGZ,KAAK,CAACW,KAAD,CAAL,CAAe,EAA9B,CACAD,WAAW,CAACC,KAAD,CAAX,CAAqB,iBAAaZ,CAAAA,GAAb,mBACAa,MADA,CAEjBb,GAAG,MAAH,kBAFiB,GAArB,CAKA,MAAOW,CAAAA,WAAP,CACH,CARoB,CAQlB,EARkB,CAAd","sourcesContent":["/* From https://medium.com/@samuelresua/easy-media-queries-in-styled-components-690b78f50053 */\n\nimport {css} from 'styled-components';\n\nexport const sizes = {\n    desktopL: 1440,\n    desktop: 1024,\n    tablet: 768,\n    mobileL: 425,\n    mobile: 320\n};\n\n// Object.keys : return the keys of the objects from sizes\n\nexport const media = Object.keys(sizes).reduce((accumulator, label) => {\n    const emSize = sizes[label] / 16;\n    accumulator[label] = (...args) => css`;\n    @media (min-width: ${emSize}em) {\n      ${css(...args)};\n    }\n  `;\n    return accumulator\n}, {});\n"]},"metadata":{},"sourceType":"module"}